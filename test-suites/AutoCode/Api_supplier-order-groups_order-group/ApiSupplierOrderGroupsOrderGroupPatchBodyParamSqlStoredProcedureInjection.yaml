---
parent: Api_supplier-order-groups_order-group
name: ApiSupplierOrderGroupsOrderGroupPatchBodyParamSqlStoredProcedureInjection
description: '**PreAuthorize:** hasPermission(authentication, ''order_write'')'
authors:
- apisec Bot
type: SUITE
init: []
path: /api/supplier-order-groups/order-group
endpoint: /api/supplier-order-groups/order-group
method: PATCH
auth: Default
headers:
- 'Accept: application/json'
- 'Content-Type: application/json'
testCases:
- id: 1
  body: |-
    {
      "acceptedToday" : false,
      "addPaymentTermsDays" : "{{@RandomInteger}}",
      "addedToSelectionGroup" : "{{@Injection}}",
      "arg1" : "{{@Injection}}",
      "arg2" : "{{@RandomInteger}}",
      "arg3" : "{{@Injection}}",
      "calendarDetails" : [ {
        "distributeOrder" : "{{@RandomInteger}}",
        "noDelivery" : "{{@RandomInteger}}",
        "noOrder" : "{{@RandomInteger}}",
        "splitFactor" : "{{@RandomInteger}}",
        "weekNo" : "{{@RandomInteger}}",
        "yearNo" : "{{@RandomInteger}}"
      } ],
      "collectionGroup" : "{{@Injection}}",
      "condition" : "{{@Injection}}",
      "discountOnOrderPerc" : "{{@RandomInteger}}",
      "discountOnOrderValue" : "{{@RandomInteger}}",
      "discountProfile" : "{{@Injection}}",
      "discounts" : {
        "basedOn" : "{{@Injection}}",
        "data" : [ {
          "discountPerc" : "{{@RandomInteger}}",
          "rangeFrom" : "{{@RandomInteger}}"
        } ],
        "discountOn" : "{{@Injection}}"
      },
      "exchangeRate" : "{{@RandomInteger}}",
      "exportName" : "{{@Injection}}",
      "exportPath" : "{{@Injection}}",
      "extractDateProfile" : "{{@Injection}}",
      "frequency" : "{{@Injection}}",
      "holidayCalendar" : "{{@Injection}}",
      "lastOrderDate" : "{{@Injection}}",
      "maxCrit1" : "{{@RandomInteger}}",
      "maxCrit2" : "{{@RandomInteger}}",
      "maxCrit3" : "{{@RandomInteger}}",
      "maxCrit4" : "{{@RandomInteger}}",
      "maxPurchaseValue" : "{{@RandomInteger}}",
      "minCrit1" : "{{@RandomInteger}}",
      "minCrit2" : "{{@RandomInteger}}",
      "minCrit3" : "{{@RandomInteger}}",
      "minCrit4" : "{{@RandomInteger}}",
      "minPurchaseValue" : "{{@RandomInteger}}",
      "orderScreen" : "{{@Injection}}",
      "orderedToday" : false,
      "passwordProtected" : false,
      "processedToday" : false,
      "remark" : "{{@Injection}}",
      "selectionCriterium" : "{{@Injection}}",
      "selectionDescription" : "{{@Injection}}",
      "selectionDetails" : [ {
        "addedToSelectionGroup" : "{{@Random}}",
        "supplierCode" : "{{@Random}}",
        "supplierName" : "{{@Random}}"
      } ],
      "selectionName" : "{{@Injection}}",
      "sgCurrency" : "{{@Injection}}",
      "startDateTime" : "{{@RandomInteger}}",
      "supplierCode" : "{{@Injection}}",
      "supplierGroup" : [ "{{@Random}}" ],
      "supplierName" : "{{@Injection}}",
      "users" : [ "{{@Random}}" ],
      "viewedToday" : false
    }
  inactive: false
useCategoryAssertion: false
assertions:
- '@ResponseTime < 7000'
cleanup: []
severity: Medium
category: sql_stored_procedure_injection
tags:
- V1
- OWASP-API8
- '[PCI DSS 3.0] 6.5.1'
- '[PCI DSS 3.2.1] 6.5.1'
- OWASP - OTG-INPVAL-005
- OWASP API Security Top 10
- Injection
- Intrusive
- '[2020 CWE TOP 6] CWE - 89'
inactive: false
policies:
  initExec: Request
  cleanupExec: Request
  logger: DEBUG
  timeoutSeconds: 300
  repeatOnFailure: 0
  repeat: 0
  repeatModule: ""
  repeatDelay: 0
  unmaskToken: false
  postExecutionDelay: 0
autoGenerated: true
